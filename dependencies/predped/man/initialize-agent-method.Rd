% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agent.R
\name{initialize,agent-method}
\alias{initialize,agent-method}
\title{Constructor for the \code{\link[predped]{agent-class}}}
\usage{
\S4method{initialize}{agent}(
  .Object,
  center,
  radius,
  id = character(0),
  speed = 0.1,
  orientation = 0,
  current_goal = NULL,
  goals = list(),
  group = 0,
  status = "move",
  waiting_counter = 0,
  cell = 0,
  parameters = data.frame(),
  color = "black",
  cell_centers = matrix(0, nrow = 33, ncol = 2),
  utility_variables = data.frame()
)
}
\arguments{
\item{center}{Numerical vector of two elements denoting the current position
of the agent (x and y coordinate).}

\item{radius}{Numeric denoting the size of agent. As agents are circular, this 
is equal to the radius of the agent.}

\item{id}{Character that serves as an identifier for the agent. Defaults to 
an empty character, triggering the random generation of an id.}

\item{speed}{Numeric denoting the current speed of the agent (in m/sec). 
Defaults to \code{0.1}.}

\item{orientation}{Numeric denoting the orientation of the agent (in degrees).
Defaults to \code{0}.}

\item{current_goal}{Object of class \code{\link[predped]{goal-class}} which
represents the current goal of the agent. Defaults to a placeholder of class 
class \code{\link[predped]{goal-class}}.}

\item{goals}{List of goals the agent has to achieve. The current goal is not 
included in this list. Defaults to an empty list.}

\item{group}{Numeric indicating the group to which the agent belongs. 
Influences the behavior of the agent through the social utility functions.
Defaults to \code{0}.}

\item{status}{Character denoting the current status of the agent, or what they
will be doing to make the next decision. Is one of \code{"move"} (the agent 
will move to another cell), \code{"plan"} (the agent will plan the route to 
their next goal), \code{"reroute"} (the agent will replan the route of their 
current goal), \code{"reorient"} (the agent will check other movement 
options), \code{"completing goal"} (the agent will interact with their goal), 
\code{"exit"} (the agent will exit the space), or \code{"wait"} (the agent 
will wait for another agent to finish their goal and step out of the way). 
Defaults to \code{"move"}.}

\item{waiting_counter}{Numeric defining how long the agent will remain in the 
status "wait" once triggered. At the start of the waiting period is set to be 
equal to the number of iterations the other agent still has to interact with 
their goal plus 2. Defaults to \code{0}}

\item{cell}{Numeric denoting the cell the agent will move to. Defaults to 
\code{0}.}

\item{parameters}{Dataframe containing the values of the parameters for the 
agent. Should contain all parameters relevant for the utility functions 
(use \code{predped::draw_parameters(1)} for an example). Defaults to a random 
set of parameters from the default parameter list in \code{predped}.}

\item{color}{Character denoting the color in which the agent should be plotted.}
}
\value{
Object of the \code{\link[predped]{agent-class}}
}
\description{
Constructor for the \code{\link[predped]{agent-class}}
}
\examples{
# Initialize agent
my_agent <- agent(center = c(0, 0), radius = 0.25)

# Access the two slots that were specified
my_agent@center
my_agent@radius

}
\seealso{
\code{\link[predped]{agent-class}},
\code{\link[predped]{cell}},
\code{\link[predped]{current_goal}},
\code{\link[predped]{goals}},
\code{\link[predped]{group}},
\code{\link[predped]{id}},
\code{\link[predped]{orientation}},
\code{\link[predped]{parameters}}
\code{\link[predped]{position}},
\code{\link[predped]{size}},
\code{\link[predped]{speed}},
\code{\link[predped]{status}},
\code{\link[predped]{waiting_counter}}
}
