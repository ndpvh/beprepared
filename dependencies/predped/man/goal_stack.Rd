% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goals.R
\name{goal_stack}
\alias{goal_stack}
\title{Generate a goal stack}
\usage{
goal_stack(
  n,
  setting,
  counter = function(n) rnorm(n, 10, 2),
  sort = TRUE,
  starting_position = entrance(setting)[1, ],
  precompute_goal_paths = FALSE,
  middle_edge = FALSE,
  ...
)
}
\arguments{
\item{n}{Integer denoting the number of goals to generate.}

\item{setting}{Object of \code{\link[predped]{background-class}}.}

\item{counter}{Numeric, vector, or function that defines the counter for each 
of the goals that are generated. When numeric, each goal will have the same 
value for counter equal to the value provided to this argument. When a numeric
vector, the values of this vector will be iterated as values for the counter 
in the goals. When a function, a random value for the counter will be 
generated through the function. For this to work, the function that is 
provided should take in the input \code{n} which defines the number of 
values to draw from the function. Defaults to \code{\(n) rnorm(n, 10, 2)}.}

\item{sort}{Logical denoting whether to order the goal stack in a logical 
way. Currently implemented in the following way. First, we select the first 
goal as being the one that is closest by the starting position provided in 
the argument \code{starting_position}. Then, we define each of the next goals
as being the one that is closest to the position of the previous goal.
Defaults to \code{TRUE}.}

\item{starting_position}{Numeric vector denoting the position at which the 
agent starts in the room. Defaults to the first entrance of the \code{setting}.}

\item{precompute_goal_paths}{Logical denoting whether to run the
\code{\link[predped]{find_path-method}} for each of the generated goals 
beforehand. Assumes that the agent does all of the goals in the order of the 
goal stack. Defaults to \code{FALSE}.}

\item{middle_edge}{Logical denoting whether to sample the goals from the 
middle of the edge of the objects in the \code{link[predped]{background-class}}
(\code{TRUE}) or to allow the goal locations to fall on all points on these 
edges (\code{FALSE}). Defaults to \code{FALSE}.}

\item{...}{Arguments provided to \code{\link[predped]{find_path-method}} to 
precompute the paths that the agents should take to reach their goals. Only
used when \code{precompute_goal_paths = TRUE}.}
}
\value{
List of instances of the \code{\link[predped]{goal-class}}.
}
\description{
Use the defined setting to generate the stack of random goals an agent should 
complete. This function outputs a list of different instances of the 
\code{\link[predped]{goal-class}}.
}
\examples{
# Create a setting
my_background <- background(shape = rectangle(center = c(0, 0), 
                                              size = c(2, 2)), 
                            objects = list(cirlce(center = c(0, 0), 
                                                  radius = 0.5)))

# Create a goal stack containing two goals
goal_stack <- goal_stack(2, my_background)

# Two goals
length(goal_stack)
goal_stack

}
\seealso{
\code{\link[predped]{background-class}}
\code{\link[predped]{goal-class}}
\code{\link[predped]{compute_edges}}
\code{\link[predped]{create_edges}}
\code{\link[predped]{determine_values}}
\code{\link[predped]{multiple_goal_stacks}}
}
