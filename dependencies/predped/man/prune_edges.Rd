% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/route.R
\name{prune_edges}
\alias{prune_edges}
\title{Evaluate intersections with objects}
\usage{
prune_edges(objects, segments, coord_specific = NULL)
}
\arguments{
\item{objects}{List of objects that extend the 
\code{\link[predped]{object-class}}.}

\item{segments}{Numerical matrix of size N x 4 containing the coordinates of 
the line segments in order x_1, y_1, x_2, y_2.}
}
\value{
Logical vector denoting whether a given edge can be retained 
(\code{TRUE}) or should be discarded (\code{FALSE})
}
\description{
In a sense, this is a vectorized alternative to \code{\link[m4ma]{seesGoal}}, 
but is applied more broadly to evaluate whether there are intersections 
between the edges that were created and the objects in the environment.
}
\details{
In this function, a lot of the heavy lifting is done by the 
\code{\link[predped]{line_intersection}} method.

Note that this function is kept separate from 
\code{\link[predped]{evaluate_edges}} so that it can still be used for the 
same purposes as \code{\link[m4ma]{seesGoal}} was originally used for.
}
\examples{
# Let's create a list of objects
objects <- list(rectangle(shape = c(0, 0), size = c(1, 1)))

# Create some segments that do and do not go though the objects in the 
# background
segments <- cbind(c(-0.75, -0.75, -0.75), 
                  c(0, 0, 0),
                  c(-0.75, 0.75, 0.95), 
                  c(0.75, 0, 0.95))
segments

# Do the test
prune_edges(objects, segments)

}
\seealso{
\code{\link[predped]{adjust_edges}},
\code{\link[predped]{create_edges}},
\code{\link[predped]{evaluate_edges}},
\code{\link[predped]{line_intersection}}
}
