% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate.R
\name{simulate}
\alias{simulate}
\title{Simulate agent movements}
\usage{
simulate(
  environment,
  archetypes = "BaselineEuropean",
  weights = rep(1/length(archetypes), length(archetypes)),
  dx = 0.01,
  path = file.path("results"),
  filename = NULL,
  save_gif = FALSE,
  plot_args = list(),
  env_args = data.frame(decay_rate_air = 1.51, decay_rate_droplet = 0.3,
    decay_rate_surface = 0.262, air_exchange_rate = 0.2, droplet_to_surface_transfer_rate
    = 18.18),
  surf_args = data.frame(prob = 1, transfer_decay_rate = 0.5, touch_frequency = 15,
    surface_decay_rate = 0.969),
  item_args = data.frame(prob = 1, transfer_decay_rate = 0.7, surface_ratio = 0.5,
    surface_decay_rate = 0.274),
  agent_args = data.frame(prob = rep(1/3, 3), viral_load = c(1, 0, 0),
    contamination_load_air = c(0, 0, 0), contamination_load_droplet = c(0, 0, 0),
    contamination_load_surface = c(1, 0, 0), emission_rate_air = rep(0.53, 3),
    emission_rate_droplet = rep(0.47, 3), pick_up_air = c(2.3, 30, 30), pick_up_droplet =
    c(2.3, 30, 30), wearing_mask = c(0, 0, 0)),
  env_config = data.frame(AirCellSize = 500, MobilityCellSize = 100, AgentReach = 500,
    SimulationTimeStep = 1/(120 * 30), HandwashingContaminationFraction = 0.3,
    HandwashingEffectDuration = 0.5, MaskEmissionAerosolReductionEfficiency = 0.4,
    MaskEmissionDropletReductionEfficiency = 0.04, MaskAerosolProtectionEfficiency = 0.4,
    MaskDropletProtectionEfficiency = 0.04, CleaningInterval = 1, Diffusivity = 23,
    WallAbsorbingProportion = 0, CoughingRate = 121, CoughingFactor = 1,
    CoughingAerosolPercentage = 1, CoughingDropletPercentage = 1, 
    
    SurfaceExposureRatio = 0.01),
  output_config = data.frame(Suppress = FALSE, Path = file.path(path, "output"),
    AerosolContaminationWriteInterval = 15, AerosolContaminationPrecision = 17,
    DropletContaminationWriteInterval = 15, DropletContaminationPrecision = 17,
    SurfaceContaminationWriteInterval = 15, SurfaceContaminationPrecision = 17),
  time_step = 0.5,
  ...
)
}
\arguments{
\item{environment}{Object of the \code{\link[predped]{background-class}} 
denoting the environment in which agents are to walk around.}

\item{archetypes}{Character vector denoting the parameter sets of 
\code{predped} to use for the simulation. Defaults to "BaselineEuropean".}

\item{weights}{Numeric vector denoting the probability with which each 
parameter set can be chosen to enter the simulation. Defaults to equal 
weighing of each entry in \code{archetypes}.}

\item{dx}{Numeric denoting the width and height of each cell in the simulation.
While \code{predped} operates on continuous space, \code{QVEmod} requires 
this space to consist of discretized cells. This argument is therefore 
multiplied with the values of \code{AirCellSize}, \code{MobilityCellSize}, 
and \code{AgentReach}. Defaults to \code{0.01}, which should be interpreted as
1cm, making \code{dx} in meters (i.e., just like the units of 
\code{environment}). This default is based on the contagion patterns of 
\code{QVEmod}, which are defined in cm as a unit. Note that QVEmod doesn't 
allow changes to this argument yet.}

\item{path}{String denoting the path under which to save the results of the 
simulation. Defaults to a folder "results" under the current directory.}

\item{filename}{Character denoting what to call this simulation in the output
files. Defaults to \code{NULL}, meaning results won't be saved.}

\item{save_gif}{Logical denoting whether to save a gif of the simulation. 
Only shows the movement of the agents, not whether they are spreading a 
disease. Defaults to \code{FALSE}.}

\item{plot_args}{Named list containing optional arguments to use when 
plotting the simulation. Only used when \code{save_gif = TRUE}. Defaults to 
an empty list.}

\item{env_args}{Data.frame containing optional arguments for the parameters 
that make up the \code{Environment} as defined by QVEmod. Defaults to the 
values used by default through QVEmod.}

\item{surf_args}{Data.frame containing optional arguments for the parameters 
that make up the \code{Fixture}s in the environment, as defined by QVEmod. 
Defaults to the values used by default through QVEmod.}

\item{item_args}{Data.frame containing optional arguments for the parameters 
that make up the \code{Item}s in the environment, as defined by QVEmod. 
Defaults to the values used by default through QVEmod.}

\item{agent_args}{Data.frame containing optional arguments for the parameters 
that make up the \code{Agent}s in the simulation, as defined by QVEmod. 
Defaults to the values used by default through QVEmod.}

\item{env_config}{Data.frame containing optional arguments for the 
configuration of the environment. Defaults to the values found in the 
`default_config.json` file of QVEmod.}

\item{output_config}{Data.frame containing optional arguments for the 
configuration of the output Defaults to the values found in the 
`default_config.json` file of QVEmod.}

\item{time_step}{Numeric denoting the time between each iteration. Defaults 
to \code{0.5} (the same as in \code{\link[predped]{simulate,predped-method}}).}

\item{...}{Additional arguments passed on to 
\code{\link[predped]{simulate,predped-method}}}
}
\value{
Named list containing the results of the simulation, where 
\code{"agents"} contains the viral parameters of the agents, \code{"movement"}
the positions of the agents at each time step, \code{"aerosol"}, 
\code{"droplet"}, and \code{"surface"} the contamination of the agents through
each source, and \code{"agent_exposure"} the total infection risk of the agent
}
\description{
Use the \code{\link[predped]{simulate,predped-method}} function to simulate 
agent movements and assess the risk of infection for each of the agents in 
the simulation. Combines the different steps that you would normally have 
to go through in one function, allowing one to simulate data with minimal 
effort.
}
\details{
This function allows for simulating viral disease spread through a 
combination two simulation models, namely the M4MA pedestrian model
(which governs walking behavior) and the QVE viral disease spread
model (which governs disease spread). The packages surrounding these models 
are used for the simulation and allow for a lot of personalization, providing
a lot of flexibility on the side of the user. In what follows, one will see 
which parameters can be changed and for what purposes.

With regard to the M4MA, one can change all of the arguments of the 
\code{\link[predped]{simulate,predped-method}} function from the \code{predped}
package by calling them as an independent argument. For example, if one wants
to change the number of iterations of the simulation to \code{1000}, one 
should call \code{simulate(<filename>, <environment>, iterations = 1000)}, 
where \code{<filename>} and \code{<environment>} are a user-provided filename
and environment in which the agents have to walk around. 

For a full list of arguments that can be used to tweak the walking simulation, 
we refer to the documentation of the 
\code{\link[predped]{simulate,predped-method}} function. Here, we only list 
the most interesting arguments:

\itemize{
    \item{\code{iterations}:}
         {integer, the number of the iterations the simulation should run}
    \item{\code{max_agents}:}
         {integer, the number of agents that are maximally allowed in the room}
    \item{\code{add_agent_after}:}
         {integer, the minimal number of iterations between each agent 
          entering the space}
    \item{\code{goal_number}:}
         {integer or function, the number of goals each agent will have in 
          the simulation (if integer) or a function that determines this 
          number through random sampling, taking in a single argument for the 
          number of draws to sample (e.g., \code{function(x) rnorm(x, 10, 2)})}
    \item{\code{goal_duration}:}
         {integer or function, determines the number of iterations it takes 
          to complete a goal in the same way as for \code{goal_number}}
    \item{\code{individual_differences}:}
         {logical, whether the parameters of the agents are allowed to differ 
          slightly between agents}
    \item{\code{fx}:}
         {function, a function that is executed at each iteration, allowing 
          the user to change a given state of the simulation, influencing the 
          future of the simulation (e.g., useful to invoke evacuation 
          behavior)}
    \item{\code{print_iterations}:}
         {logical, whether to print at which iteration the model is currently}
}

With regard to QVE, one can change most of the characteristics that guide the 
viral disease spread. These characteristics have been neatly categorized 
according to the object to which they apply, namely to the agents, environment, 
surfaces, and items, each through supplying a \code{data.frame} to the 
respective arguments \code{agent_args}, \code{env_args}, \code{surf_args}, 
and \code{item_args}. Importantly, these \code{data.frame}s should all be 
fully specified for the code to work, meaning that you should specify all 
parameters if you wish to change the defaults.

The \code{agent_args} take in the following specifications (all numeric 
vectors):
\itemize{
    \item{\code{prob}:}
         {probability of assigning this parameter set to an agent}
    \item{\code{viral_load}:}
         {the viral load of the agent}
    \item{\code{contamination_load_air}, \code{contamination_load_droplet}, 
          \code{contamination_load_surface}:}
         {how much the agent comes in contact with a virus through the three 
          different media}
    \item{\code{emission_rate_air}, \code{emission_rate_droplet}:}
         {how much the virus is spread through air or droplets by an infected
          agent}
    \item{\code{pick_up_air}, \code{pick_up_droplet}:}
         {how much the virus is picked up through air and droplets}
    \item{\code{wearing_mask}:}
         {whether the agent is wearing a mask, indicated by a 0 (for false) or
          a 1 (for true)}
}

The \code{env_args} take in the following specifications (singular numerics):
\itemize{
    \item{\code{decay_rate_air}, \code{decay_rate_droplet}, \code{decay_rate_surface}:}
         {how much the contamination decays across media}
    \item{\code{air_exchange_rate}:}
         {how much the air in the room is refreshed}
    \item{\code{droplet_to_surface_transfer_rate}:}
         {how much contamination in the droplets is transferred to a surface}
}

The \code{surf_args} take in the following specifications (numeric vectors):
\itemize{
    \item{\code{prob}:}
         {probability of assigning a given set of surface parameters to a 
          particular surface in the environment}
    \item{\code{transfer_decay_rate}:}
         {how much contamination on the surface decays on touch}
    \item{\code{touch_frequency}:}
         {how often agents touch the surface}
    \item{\code{surface_decay_rate}:}
         {how much contamination on the surface decays}
}

The \code{item_args} take in the following specifications (numeric vectors):
\itemize{
    \item{\code{prob}:}
         {probability of assigning a given set of item parameters to a 
          particular goal that the agent has accomplished}
    \item{\code{transfer_decay_rate}:}
         {how much contamination on the item decays on touch}
    \item{\code{surface_ratio}:}
         {ratio of the height vs the width of the item}
    \item{\code{surface_decay_rate}:}
         {how much contamination on the surface of the item decays}
}

For full information on the arguments one can change and examples, we refer 
the interested reader to the documentations of \code{predped} and 
\code{QVEmod}.
}
